// "use client";

// import { useRouter } from "next/navigation";
// import React, { useState, useEffect } from "react";
// import axiosInstance from "./utils/axiosInstance";
// import Course from "./components/course/Course";
// import Footer from "./components/layout/Footer";
// import Profile from "./components/profile/Profile";
// import Market from "./components/market/Market"; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç Market
// import { FaPaperclip, FaPaperPlane } from "react-icons/fa";
// import Image from "next/image";

// export default function Home() {
//   const [file, setFile] = useState(null);
//   const [loading, setLoading] = useState(false);
//   const [uploadSuccess, setUploadSuccess] = useState(false);
//   const [courses, setCourses] = useState([]);
//   const [courseLoading, setCourseLoading] = useState(true);
//   const [activeSection, setActiveSection] = useState("home");
//   const [userInput, setUserInput] = useState("");

//   const router = useRouter();

//   const suggestions = [
//     "üìì –ö—É—Ä—Å –ø–æ —Ç—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏–∏",
//     "üèπ –ú–æ–Ω–≥–æ–ª—å—Å–∫–æ–µ –Ω–∞—à–µ—Å—Ç–≤–∏–µ",
//     "üë®‚Äçüíª –û—Å–Ω–æ–≤—ã –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ Python",
//     "üèØ –ò—Å—Ç–æ—Ä–∏—è –î—Ä–µ–≤–Ω–µ–≥–æ –†–∏–º–∞",
//     "üîÑ –≠–∫–æ–ª–æ–≥–∏—è –∏ —É—Å—Ç–æ–π—á–∏–≤–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ",
//     "üåå –ê—Å—Ç—Ä–æ–Ω–æ–º–∏—è –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö",
//     "üíº –í–≤–µ–¥–µ–Ω–∏–µ –≤ –±–∏–∑–Ω–µ—Å-–∞–Ω–∞–ª–∏—Ç–∏–∫—É",
//     "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏",
//     "üß¨ –û—Å–Ω–æ–≤—ã –≥–µ–Ω–µ—Ç–∏–∫–∏",
//     "üåç –ì–µ–æ–≥—Ä–∞—Ñ–∏—è –∏ –∫–∞—Ä—Ç–æ–≥—Ä–∞—Ñ–∏—è",
//     "üé® –ò—Å—Ç–æ—Ä–∏—è –∏—Å–∫—É—Å—Å—Ç–≤–∞",
//     "üìù –ù–∞—É—á–Ω–æ–µ –ø–∏—Å—å–º–æ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏",
//   ];

//   const suggestions_2 = [
//     "üìì –í–≤–µ–¥–µ–Ω–∏–µ –≤ –∞–ª–≥–µ–±—Ä—É",
//     "üèπ –ò—Å—Ç–æ—Ä–∏—è –í–µ–ª–∏–∫–æ–π –û—Ç–µ—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –≤–æ–π–Ω—ã",
//     "üë®‚Äçüíª –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –Ω–∞ JavaScript",
//     "üèØ –ö—É–ª—å—Ç—É—Ä–∞ –∏ —Ç—Ä–∞–¥–∏—Ü–∏–∏ –î—Ä–µ–≤–Ω–µ–≥–æ –ï–≥–∏–ø—Ç–∞",
//     "üîÑ –í–æ–∑–æ–±–Ω–æ–≤–ª—è–µ–º—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ —ç–Ω–µ—Ä–≥–∏–∏",
//     "üåå –ö–æ—Å–º–æ–ª–æ–≥–∏—è –∏ –∫–æ—Å–º–∏—á–µ—Å–∫–∏–µ —è–≤–ª–µ–Ω–∏—è",
//     "üíº –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è",
//     "üìä –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Python",
//     "üß¨ –ë–∏–æ—Ö–∏–º–∏—è –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö",
//     "üåç –ú–∏—Ä–æ–≤–∞—è —ç–∫–æ–Ω–æ–º–∏–∫–∞",
//     "üé® –°–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ –∏—Å–∫—É—Å—Å—Ç–≤–æ",
//     "üìù –¢–µ—Ö–Ω–∏–∫–∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–∏—Å—å–º–∞",
//   ];

//   const suggestions_3 = [
//     "üìì –î–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ —É—Ä–∞–≤–Ω–µ–Ω–∏—è",
//     "üèπ –°—Ä–µ–¥–Ω–µ–≤–µ–∫–æ–≤–∞—è –ï–≤—Ä–æ–ø–∞",
//     "üë®‚Äçüíª –ú–æ–±–∏–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ Kotlin",
//     "üèØ –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –î—Ä–µ–≤–Ω–µ–π –ì—Ä–µ—Ü–∏–∏",
//     "üîÑ –ì–ª–æ–±–∞–ª—å–Ω–æ–µ –ø–æ—Ç–µ–ø–ª–µ–Ω–∏–µ –∏ –∫–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è",
//     "üåå –§–∏–∑–∏–∫–∞ —á–µ—Ä–Ω—ã—Ö –¥—ã—Ä",
//     "üíº –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞–º–∏",
//     "üìä –ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ",
//     "üß¨ –ú–∏–∫—Ä–æ–±–∏–æ–ª–æ–≥–∏—è",
//     "üåç –ü–æ–ª–∏—Ç–∏—á–µ—Å–∫–∞—è –≥–µ–æ–≥—Ä–∞—Ñ–∏—è",
//     "üé® –ò—Å–∫—É—Å—Å—Ç–≤–æ —ç–ø–æ—Ö–∏ –í–æ–∑—Ä–æ–∂–¥–µ–Ω–∏—è",
//     "üìù –ü—É–±–ª–∏—Ü–∏—Å—Ç–∏–∫–∞ –∏ –∂—É—Ä–Ω–∞–ª–∏—Å—Ç–∏–∫–∞",
//   ];

//   const fetchCourses = async () => {
//     try {
//       const telegramId = localStorage.getItem("telegramId");
//       const response = await axiosInstance.post("/course/user_courses", {
//         telegramId, 
//       });
//       const courseIds = response.data.user_courses;

//       const courseDetailsPromises = courseIds.map(async (id) => {
//         try {
//           const courseResponse = await axiosInstance.get(
//             `/course/${id}/get_topic_id`
//           );
//           if (courseResponse.status === 200) {
//             return {
//               id: courseResponse.data.name_of_course._id,
//               name: courseResponse.data.name_of_course.headName,
//               topics: courseResponse.data.id_collection,
//             };
//           }
//         } catch (courseError) {
//           if (
//             courseError.response &&
//             courseError.response.data.message === "Course not found"
//           ) {
//             console.warn(`Course with id ${id} not found. Skipping.`);
//             return null; 
//           } else {
//             throw courseError;
//           }
//         }
//       });

//       const courseDetails = await Promise.all(courseDetailsPromises);
//       const validCourseDetails = courseDetails.filter(
//         (course) => course !== null
//       );
//       setCourses(validCourseDetails);
//     } catch (error) {
//       console.error("Error fetching courses:", error);
//     } finally {
//       setCourseLoading(false);
//     }
//   };

//   useEffect(() => {
//     fetchCourses();
//   }, []);

//   console.log(courses);

//   const handleFileChange = (event) => {
//     const selectedFile = event.target.files[0];
//     setFile(selectedFile);
//     setUploadSuccess(false);
//   };

//   const removeFile = () => {
//     setFile(null);
//   };

//   const handleSubmit = async () => {
//     if (!file && !userInput.trim()) {
//       alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª");
//       return;
//     }
//     const telegramId = localStorage.getItem("telegramId");
//     const response = await axiosInstance.put("/auth/userInfo", {
//       telegramId, 
//     });
//     const user = response.data.data.user;

//     const formData = new FormData();
//     if (file) {
//       formData.append("material", file);
//     }
//     formData.append("telegramId", telegramId);
//     formData.append("user_interest", user.surveyAnswers.join(","));
//     formData.append("userInput", userInput);

//     try {
//       setLoading(true);

//       const response = await axiosInstance.post("/course/create", formData, {
//         headers: {
//           "Content-Type": "multipart/form-data",
//         },
//       });

//       const { data } = response;

//       const newTestId = data._id;
//       setUploadSuccess(true);
//       router.push(`pages/course/course-${newTestId}`);
//     } catch (error) {
//       console.error("Error uploading file:", error);
//     } finally {
//       setLoading(false);
//     }
//   };

//   const handleSuggestionClick = (suggestion) => {
//     setUserInput(suggestion);
//   };

//   return (
//     <div className="flex flex-col min-h-screen">
//       <div className="absolute inset-0 flex items-center justify-center overflow-hidden -z-10">
//         <div className="relative mb-72 -z-10 h-full w-full min-w-[29rem] max-w-[96rem] sm:mb-0">
//           <Image
//             alt=""
//             className="pointer-events-none mix-blend-color-burn opacity-20 absolute scale-[300%] inset-0 -z-10 -translate-x-2 select-none sm:translate-x-0"
//             src="/v0-bg.svg"
//             fill
//           />
//         </div>
//       </div>

//       <main className="flex-grow">
//         {loading && (
//           <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
//             <img
//               src="https://i.ibb.co/vkqbnCb/spiral-logo-concept-swirl-modern-logo-design-free-vector-Photoroom.png"
//               alt="Spirality Logo"
//               className="h-32 w-32 md:h-30 md:w-30 rotate-animation-loader"
//             />
//           </div>
//         )}

//         {activeSection === "home" && (
//           <section className="flex flex-col h-screen text-white font-ubuntu mt-[-50%] md:mt-[-15%]">
//             <div className="flex-grow flex flex-col items-center justify-center px-4 mt-44">
//               <h1 className="text-4xl md:text-6xl font-bold mb-8 text-s max-sm:p-4">
//                 –°–æ–∑–¥–∞–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∫—É—Ä—Å –≤ –ø–∞—Ä—É –∫–ª–∏–∫–æ–≤
//               </h1>
//               <div className="w-[110%] max-w-2xl overflow-hidden">
//                 <div className="suggestion-container mb-8 whitespace-nowrap overflow-hidden">
//                   <div className="suggestions-scroll flex animate-scroll gap-10">
//                     {suggestions
//                       .concat(suggestions)
//                       .map((suggestion, index) => (
//                         <button
//                           key={index}
//                           className="bg-[#2D2D2D] text-white px-4 py-2 rounded-lg text-lg hover:bg-[#3D3D3D] transition-colors mr-2 whitespace-nowrap mb-6"
//                           onClick={() => handleSuggestionClick(suggestion)}
//                         >
//                           {suggestion}
//                         </button>
//                       ))}
//                   </div>

//                   <div className="suggestions-scroll flex animate-scroll gap-4">
//                     {suggestions_2
//                       .concat(suggestions_2)
//                       .map((suggestion, index) => (
//                         <button
//                           key={index}
//                           className="bg-[#2D2D2D] text-white px-4 py-2 rounded-lg text-lg hover:bg-[#3D3D3D] transition-colors mr-2 whitespace-nowrap mb-6"
//                           onClick={() => handleSuggestionClick(suggestion)}
//                         >
//                           {suggestion}
//                         </button>
//                       ))}
//                   </div>

//                   <div className="suggestions-scroll flex animate-scroll gap-4">
//                     {suggestions_3
//                       .concat(suggestions_3)
//                       .map((suggestion, index) => (
//                         <button
//                           key={index}
//                           className="bg-[#2D2D2D] text-white px-4 py-2 rounded-lg text-lg hover:bg-[#3D3D3D] transition-colors mr-2 whitespace-nowrap mb-6"
//                           onClick={() => handleSuggestionClick(suggestion)}
//                         >
//                           {suggestion}
//                         </button>
//                       ))}
//                   </div>
//                 </div>
//               </div>
//             </div>
//             <div className="pb-8">
//               <div className="w-[95%] max-w-2xl mx-auto relative">
//                 <input
//                   type="text"
//                   className="w-full bg-[#2D2D2D] text-white rounded-full py-3 px-6 pr-24 focus:outline-none focus:ring-2 focus:ring-purple-500"
//                   placeholder=" –°–æ–∑–¥–∞–π –º–Ω–µ –∫—É—Ä—Å –ø–æ..."
//                   value={userInput}
//                   onChange={(e) => setUserInput(e.target.value)}
//                 />
//                 <label
//                   htmlFor="file-upload"
//                   className="absolute right-14 top-1/2 -translate-y-1/2 cursor-pointer"
//                 >
//                   <FaPaperclip className="text-gray-400 hover:text-white transition-colors text-xl" />
//                 </label>
//                 <input
//                   id="file-upload"
//                   type="file"
//                   className="hidden"
//                   onChange={handleFileChange}
//                   accept="image/*,.pdf,.doc,.docx"
//                 />
//                 <button
//                   className="absolute right-2 top-1/2 -translate-y-1/2 bg-purple-600 text-white p-2 rounded-full hover:bg-purple-700 transition-colors"
//                   onClick={handleSubmit}
//                 >
//                   <FaPaperPlane />
//                 </button>
//               </div>
//             </div>
//           </section>
//         )}

//         {activeSection === "profile" && <Profile />}

//         {activeSection === "courses" && (
//           <div className="rounded-2xl p-6 w-full max-w-[90%] md:max-w-3xl mx-auto text-center mb-4">
//             <h1 className="text-2xl md:text-3xl font-extrabold text-white mb-8 text-start mt-4 md:py-6">
//               –¢–≤–æ–∏ –∫—É—Ä—Å—ã
//             </h1>
//             {courseLoading ? (
//               <div className="flex items-center justify-center">
//                 <div className="loader"></div>
//               </div>
//             ) : (
//               courses.map((course) => (
//                 <Course
//                   key={course.id}
//                   course_id={course.id}
//                   name_of_course={course.name}
//                   topics_id={course.topics}
//                   isOpen={false}
//                 />
//               ))
//             )}
//           </div>
//         )}

//         {activeSection === "market" && <Market />}
//       </main>

//       <Footer
//         activeSection={activeSection}
//         setActiveSection={setActiveSection}
//       />
//     </div>
//   );
// }









// 'use client';

// import { useEffect, useState } from 'react';
// import { useRouter } from 'next/navigation';
// import TelegramInitializer from './components/TelegramInitializer';
// import { motion } from 'framer-motion';

// export default function Page() {
//   const [showSurvey, setShowSurvey] = useState(false);
//   const [isAuthenticated, setIsAuthenticated] = useState(false);
//   const [surveyStep, setSurveyStep] = useState(0);
//   const [surveyAnswers, setSurveyAnswers] = useState([]);
//   const router = useRouter();

//   const surveyQuestions = [
//     {
//       question: "üïí –ö–∞–∫–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã —Ç—Ä–∞—Ç–∏—Ç–µ –Ω–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–∫—É –∫ —ç–∫–∑–∞–º–µ–Ω–∞–º –∏–ª–∏ –∏–∑—É—á–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ç–µ–º?",
//       options: ["–ú–µ–Ω—å—à–µ 30 –º–∏–Ω—É—Ç ‚è≥", "30-60 –º–∏–Ω—É—Ç ‚è∞", "1-2 —á–∞—Å–∞ ‚åõ", "–ë–æ–ª—å—à–µ 2 —á–∞—Å–æ–≤ üï∞Ô∏è"],
//       key: "studyTime"
//     },
//     {
//       question: "üìö –°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ —É—Ö–æ–¥–∏—Ç –Ω–∞ –ø–æ–∏—Å–∫ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –∏ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Å–ø–µ–∫—Ç–æ–≤?",
//       options: ["–ú–µ–Ω–µ–µ 10 –º–∏–Ω—É—Ç ‚è≥", "10-30 –º–∏–Ω—É—Ç ‚è∞", "30-60 –º–∏–Ω—É—Ç ‚åõ", "–ë–æ–ª–µ–µ —á–∞—Å–∞ üï∞Ô∏è"],
//       key: "materialPreparationTime"
//     },
//     {
//       question: "‚ùì –ö–∞–∫ —á–∞—Å—Ç–æ –≤—ã —Å—Ç–∞–ª–∫–∏–≤–∞–µ—Ç–µ—Å—å —Å –Ω–µ—Ö–≤–∞—Ç–∫–æ–π –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —É—á–µ–±–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤?",
//       options: ["–ü–æ—Å—Ç–æ—è–Ω–Ω–æ üîÑ", "–ß–∞—Å—Ç–æ üåÄ", "–ò–Ω–æ–≥–¥–∞ üîÑ", "–†–µ–¥–∫–æ üåÄ"],
//       key: "materialAvailability"
//     },
//     {
//       question: "üìÖ –ù–∞—Å–∫–æ–ª—å–∫–æ —Å–ª–æ–∂–Ω–æ –≤–∞–º –¥–∞–µ—Ç—Å—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è —É—á–µ–±–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –∏ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø–ª–∞–Ω–∞ –∑–∞–Ω—è—Ç–∏–π?",
//       options: ["–û—á–µ–Ω—å —Å–ª–æ–∂–Ω–æ üòñ", "–°–ª–æ–∂–Ω–æ üòï", "–£–º–µ—Ä–µ–Ω–Ω–æ üôÇ", "–õ–µ–≥–∫–æ üòé"],
//       key: "studyOrganization"
//     },
//     {
//       question: "üí° –ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ, —á—Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ —Å–æ–∫—Ä–∞—Ç–∏—Ç—å –≤—Ä–µ–º—è –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ –Ω–∞ 60% –∏ –ø–æ–ª—É—á–∞—Ç—å –∫–æ–Ω—Å–ø–µ–∫—Ç—ã –ø–æ –≤–∞—à–∏–º –∏–Ω—Ç–µ—Ä–µ—Å–∞–º. –í—ã –±—ã –ø–æ–ø—Ä–æ–±–æ–≤–∞–ª–∏ –Ω–∞—à –ø—Ä–æ–¥—É–∫—Ç?",
//       options: ["–î–∞, –∫–æ–Ω–µ—á–Ω–æ! üéâ", "–°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ", "–í–æ–∑–º–æ–∂–Ω–æ", "–í—Ä—è–¥ –ª–∏"],
//       key: "readyToTry"
//     },
//     {
//       question: "–ö–∞–∫–∏–µ —Ç–µ–º—ã –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç? –í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.",
//       options: [
//         { 
//           name: "–ê–Ω–∏–º–µ", 
//           image: "https://lh5.googleusercontent.com/proxy/LI573Ig7yCMVPu3P2-tYguPx4L2d6QegaTBxaA0LWZAndf0BRS46pIKjuGPG5oEbDuFWBVgbF-kMhFcfxeyuQ69UlAFifTcQ9qo",
//           subCategories: [
//             { name: "–ê—Ç–∞–∫–∞ —Ç–∏—Ç–∞–Ω–æ–≤", image: "https://www.kino-teatr.ru/news/23181/205114.jpg" },
//             { name: "–ù–∞—Ä—É—Ç–æ", image: "https://desu.shikimori.one/uploads/poster/animes/20/main_2x-f6c8bb835fb175b99d38d2897e7040ee.webp" },
//             { name: "–í–∞–Ω–ü–∏—Å", image: "https://kinocensor.ru/cache/videos/12947/5c88599ed19994fd3ced481339c2259b-367x550.jpg" },
//             { name: "–°—Ç–∞–ª—å–Ω–æ–π –∞–ª—Ö–∏–º–∏–∫", image: "https://lh6.googleusercontent.com/proxy/BjJUKL2Akn8ooj2vnmLqM-2NBochvuS3C5ktCbXPjPRE-Y-EPs2mHArja6Ey9JRZxlMZ-kt9d_f3-t4_XtuVIWhiKx58cHL9" },
//             { name: "–¢–µ—Ç—Ä–∞–¥—å —Å–º–µ—Ä—Ç–∏", image: "https://media.myshows.me/shows/760/a/96/a96160e13c22678bac4bd99c37842c1b.jpg" },
//           ]
//         },
//         { 
//           name: "–ò–≥—Ä—ã", 
//           image: "https://resizer.mail.ru/p/a8c5015f-6426-5fe9-abb9-f1f2b917e150/AQAKV4K_BwP8yAXbjpqL4Pmxma1tBlY3Cf79TrwdQS8kv43qQeEQ3DpmZNOFWH4cSuUYYO1UjnHIGO2_3SnTj8zv3Go.jpg",
//           subCategories: [
//             { name: "The Witcher 3", image: "https://technicalcity.b-cdn.net/en/game_image/4/image?thumbnail=yes&maxwidth=400&maxheight=400&webp=1" },
//             { name: "Counter-Strike: Global Offensive", image: "https://img.championat.com/news/big/t/x/anons-counter-strike-2_16795113311562411600.jpg" },
//             { name: "Brawl Stars", image: "https://www.iphones.ru/wp-content/uploads/2022/03/2D4F4F53-D36C-4213-BB42-CAC30A9DD06D.jpeg" },
//             { name: "Roblox", image: "https://images.immediate.co.uk/production/volatile/sites/3/2021/03/unnamed-881a107.jpg?quality=90&resize=640,427" },
//             { name: "Assassin's creed", image: "https://img.asmedia.epimg.net/resizer/v2/NQSSVO3KOFCYRJY63WIWRFWFBU.jpg?auth=2a89197070a4e57d1cd23a611d76bf469e01b476aba89f7724d540f49cfca68b&width=1472&height=1104&smart=true" },
//           ]
//         },
//         { 
//           name: "–ú—É–∑—ã–∫–∞", 
//           image: "https://34mag.net/piarshak/content/editor_images/2018content/september/15sovetov_koncert/125.jpg",
//           subCategories: [
//             { name: "Queen", image: "https://i.scdn.co/image/af2b8e57f6d7b5d43a616bd1e27ba552cd8bfd42" },
//             { name: "Taylor Swift", image: "https://people.com/thmb/pXCJVY3QPmmcywd3f_pI3vl-9LI=/1500x0/filters:no_upscale():max_bytes(150000):strip_icc():focal(945x393:947x395)/Taylor-Swift-Zurich-070924-1-a49aaa8211c64d5b99d1247b8ea060e2.jpg" },
//             { name: "Kendrick Lamar", image: "https://yt3.googleusercontent.com/V4FqOieQ9y9dnErXPUZNWl1hyLafxIK7F55n5M8LVhPBmEou8kAbNuMlUZx23DoJHvH1sWG56No=s900-c-k-c0x00ffffff-no-rj" },
//             { name: "Daft Punk", image: "https://concord.com/wp-content/uploads/2018/02/daft-punk-banner-new.jpg" },
//             { name: "Eminem", image: "https://i.guim.co.uk/img/media/9340fecc0db09bc13b483168446ad0e2e05c3e23/852_3364_7108_4264/master/7108.jpg?width=465&dpr=1&s=none" },
//           ]
//         },
//         { 
//           name: "–°–ø–æ—Ä—Ç", 
//           image: "https://img.olympics.com/images/image/private/t_s_pog_staticContent_hero_xl_2x/f_auto/primary/ngdjbafv3twathukjbq2",
//           subCategories: [
//             { name: "–§—É—Ç–±–æ–ª", image: "https://cdn.britannica.com/69/228369-050-0B18A1F6/Asian-Cup-Final-2019-Hasan-Al-Haydos-Qatar-Japan-Takumi-Minamino.jpg" },
//             { name: "–ë–∞—Å–∫–µ—Ç–±–æ–ª", image: "https://sportyakutia.ru/images/1fotoposel/1posel2022/okt22/pari1.jpg" },
//             { name: "–í–æ–ª–µ–π–±–æ–ª", image: "https://img.olympics.com/images/image/private/t_s_pog_staticContent_hero_lg/f_auto/primary/ts0pb12hj1xleueuhh22" },
//             { name: "–¢–µ–Ω–Ω–∏—Å", image: "https://srednyadm.ru/media/resized/tCZ-RTXNq5cZ28qJuQytkN63rwqKPD77kkvelBVzUUI/rs:fit:1024:768/aHR0cHM6Ly9zcmVk/bnlhZG0ucnUvbWVk/aWEvcHJvamVjdF9t/b18zOTEvOWEvMWIv/ZTcvN2MvNTMvNWYv/aW1hZ2UwMDEuanBn.jpg" },
//             { name: "–®–∞—Ö–º–∞—Ç—ã", image: "https://chessbuy.ru/wa-data/public/shop/products/36/06/636/images/4639/4639.970.jpg" },
//           ]
//         },
//         { 
//           name: "–ö–æ–º–∏–∫—Å—ã", 
//           image: "https://images.ast.ru/upload/iblock/b95/Comics_W.jpg",
//           subCategories: [
//             { name: "–ß–µ–ª–æ–≤–µ–∫-–ø–∞—É–∫", image: "https://www.mirf.ru/wp-content/uploads/2016/08/Spider-2-scaled.jpg" },
//             { name: "–ë—ç—Ç–º–µ–Ω", image: "https://www.mirf.ru/wp-content/uploads/2016/07/batman-reading-comics1.jpg" },
//             { name: "–ñ–µ–ª–µ–∑–Ω—ã–π-—á–µ–ª–æ–≤–µ–∫", image: "https://cdn.shazoo.ru/240398_uFCjOXNfWk_iron_man.jpg" },
//             { name: "–ê—Å—Ç–µ—Ä–∏–∫—Å –∏ –û–±–µ–ª–∏–∫—Å", image: "https://geekach.com.ua/content/uploads/images/85.jpg" },
//             { name: "–î—ç–¥–ø—É–ª", image: "https://disima.ru/wp-content/uploads/2021/02/dedpul-1.jpg" },
//           ]
//         },
//         { 
//           name: "–ú—É–ª—å—Ç—Ñ–∏–ª—å–º—ã", 
//           image: "https://avatars.dzeninfra.ru/get-zen_doc/1714257/pub_64d7eda2c92c747c9237d8a5_64dbc775a9216a3544a6eeaa/scale_1200",
//           subCategories: [
//             { name: "–ì–æ–ª–æ–≤–æ–ª–æ–º–∫–∞", image: "https://www.soyuz.ru/public/uploads/files/2/7635896/202406241224521c7d19b9b3.jpg" },
//             { name: "–í—Ä–µ–º—è –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π", image: "https://tlum.ru/uploads/bbca0a8e64d9e7d9da2264370f2a92707795984dc3972407152e6d0ef9ab3b14.jpeg" },
//             { name: "–ì—Ä–∞–≤–∏—Ç–∏ –§–æ–ª–∑", image: "https://www.soyuz.ru/public/uploads/files/2/7635448/202406061514129c1e31909d.jpg" },
//             { name: "–ì—Ä–∏—Ñ—Ñ–∏–Ω—ã", image: "https://thumbs.dfs.ivi.ru/storage5/contents/0/2/97e9a9e47f73cd84040f4b1456ddae.jpg" },
//             { name: "–†–∏–∫ –∏ –ú–æ—Ä—Ç–∏", image: "https://s0.rbk.ru/v6_top_pics/media/img/1/64/756744922016641.jpg" },
//           ]
//         }
//       ],
//       key: "interests",
//       multiple: true
//     },
//     {
//       question: "–ö–∞–∫ —á–∞—Å—Ç–æ –≤—ã –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –∑–∞–Ω–∏–º–∞—Ç—å—Å—è?",
//       options: ["–ï–∂–µ–¥–Ω–µ–≤–Ω–æ", "–ù–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é", "–†–∞–∑ –≤ –Ω–µ–¥–µ–ª—é", "–ù–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –≤ –º–µ—Å—è—Ü"],
//       key: "studyFrequency"
//     }
//   ];

//   const handleSurveyNext = () => {
//     if (surveyStep < surveyQuestions.length - 1) {
//       setSurveyStep(surveyStep + 1);
//     } else {
//       handleSurveyComplete();
//     }
//   };

//   const handleSurveyComplete = async () => {
//     try {
//       const telegram = window.Telegram?.WebApp;
//       const { id, username, first_name, last_name } = telegram.initDataUnsafe.user;
      
//       const response = await fetch('/api/auth/register', {
//         method: 'POST',
//         headers: {
//           'Content-Type': 'application/json',
//         },
//         body: JSON.stringify({
//           telegramId: id,
//           username,
//           firstName: first_name,
//           lastName: last_name,
//           surveyAnswers,
//         }),
//       });

//       if (response.ok) {
//         setIsAuthenticated(true);
//         setShowSurvey(false);
//       } else {
//         throw new Error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è");
//       }
//     } catch (err) {
//       console.error("–û—à–∏–±–∫–∞:", err.message);
//       alert(err.message);
//       // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–∫–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ
//     }
//   };

//   const renderSurvey = () => {
//     const currentQuestion = surveyQuestions[surveyStep];
//     return (
//       <motion.section
//         key={surveyStep}
//         initial={{ opacity: 0, x: 50 }}
//         animate={{ opacity: 1, x: 0 }}
//         exit={{ opacity: 0, x: -50 }}
//         transition={{ duration: 0.5 }}
//         className="bg-[#171819] rounded-2xl p-4 sm:p-6 md:p-8 lg:p-12 xl:p-16 w-full max-w-4xl xl:max-w-6xl mx-auto text-center shadow-2xl shadow-[#2A1E4D] mb-10"
//       >
//         <h2 className="text-xl sm:text-2xl md:text-3xl xl:text-4xl font-bold text-white mb-4 sm:mb-6">{currentQuestion.question}</h2>
//         <div className="grid grid-cols-1 sm:grid-cols-2 gap-3 sm:gap-4">
//           {currentQuestion.options.map((option, index) => (
//             <motion.button
//               key={index}
//               whileHover={{ scale: 1.03 }}
//               whileTap={{ scale: 0.97 }}
//               onClick={() => {
//                 const answer = option.name || option;
//                 if (currentQuestion.multiple) {
//                   setSurveyAnswers(prev => 
//                     prev.includes(answer) ? prev.filter(a => a !== answer) : [...prev, answer]
//                   );
//                 } else {
//                   setSurveyAnswers(prev => [...prev, answer]);
//                   handleSurveyNext();
//                 }
//               }}
//               className={`p-6 sm:p-4 rounded-lg text-left transition-all duration-200 ${
//                 currentQuestion.multiple && surveyAnswers.includes(option.name || option)
//                   ? 'bg-[#6a4ae2] text-white'
//                   : 'bg-[#2A2D2E] text-white hover:bg-[#3A3D3E]'
//               }`}
//             >
//               {option.name ? (
//                 <div className="flex flex-col items-center">
//                   <img src={option.image} alt={option.name} className="w-full h-24 sm:h-32 xl:h-40 object-cover rounded-lg mb-2" />
//                   <span className="text-center text-sm sm:text-lg xl:text-lg font-bold">{option.name}</span>
//                 </div>
//               ) : (
//                 <span className="text-center w-full block text-lg font-semibold sm:text-base xl:text-lg">{option}</span>
//               )}
//             </motion.button>
//           ))}
//         </div>
//         {currentQuestion.multiple && surveyAnswers.some(answer => currentQuestion.options.map(o => o.name).includes(answer)) && currentQuestion.options[0].subCategories && (
//           <div className="mt-4 sm:mt-6 xl:mt-8">
//             <h3 className="text-lg sm:text-xl md:text-2xl xl:text-3xl font-bold text-white mb-3 sm:mb-4 xl:mb-5">–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏:</h3>
//             <div className="grid grid-cols-1 sm:grid-cols-2 gap-3 sm:gap-4">
//               {currentQuestion.options
//                 .filter(option => surveyAnswers.includes(option.name))
//                 .flatMap(option => option.subCategories)
//                 .map((subCategory, index) => (
//                   <motion.button
//                     key={index}
//                     whileHover={{ scale: 1.03 }}
//                     whileTap={{ scale: 0.97 }}
//                     onClick={() => {
//                       setSurveyAnswers(prev => 
//                         prev.includes(subCategory.name) 
//                           ? prev.filter(a => a !== subCategory.name) 
//                           : [...prev, subCategory.name]
//                       );
//                     }}
//                     className={`p-3 sm:p-4 rounded-lg text-left transition-all duration-200 ${
//                       surveyAnswers.includes(subCategory.name)
//                         ? 'bg-[#6a4ae2] text-white'
//                         : 'bg-[#2A2D2E] text-white hover:bg-[#3A3D3E]'
//                     }`}
//                   >
//                     <div className="flex flex-col items-center">
//                       <img src={subCategory.image} alt={subCategory.name} className="w-full h-24 sm:h-32 xl:h-40 object-cover rounded-lg mb-2" />
//                       <span className="text-center text-sm sm:text-base xl:text-lg">{subCategory.name}</span>
//                     </div>
//                   </motion.button>
//                 ))}
//             </div>
//           </div>
//         )}
//         {currentQuestion.multiple && (
//           <motion.button
//             whileHover={{ scale: 1.05 }}
//             whileTap={{ scale: 0.95 }}
//             onClick={handleSurveyNext}
//             className="mt-4 sm:mt-6 xl:mt-8 bg-[#6a4ae2] text-white py-2 px-4 rounded-lg transition-all duration-200 font-bold text-sm sm:text-base xl:text-lg"
//           >
//             –î–∞–ª–µ–µ
//           </motion.button>
//         )}
//       </motion.section>
//     );
//   };

//   return (
//     <TelegramInitializer>
//       {({ isAuthenticated: telegramAuth, isNewUser }) => {
//         useEffect(() => {
//           setIsAuthenticated(telegramAuth);
//           setShowSurvey(isNewUser);
//         }, [telegramAuth, isNewUser]);

//         if (showSurvey) {
//           return renderSurvey();
//         }

//         if (!isAuthenticated) {
//           return (
//             <div style={{ textAlign: 'center', marginTop: '20px', color: 'white' }}>
//               –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å –≤ Telegram.
//             </div>
//           );
//         }

//         // –ó–¥–µ—Å—å —Ä–∞–∑–º–µ—â–∞–µ—Ç—Å—è –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
//         return (
//           <div>
//             <h1>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ!</h1>
//             {/* –î–æ–±–∞–≤—å—Ç–µ –∑–¥–µ—Å—å –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç –≤–∞—à–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è */}
//           </div>
//         );
//       }}
//     </TelegramInitializer>
//   );
// }



'use client';

import { useEffect, useState } from 'react';
import { useRouter } from 'next/navigation';
import TelegramInitializer from './components/TelegramInitializer';
import { motion } from 'framer-motion';
import axiosInstance from "./utils/axiosInstance";

export default function Page() {
  return (
    <TelegramInitializer>
      {({ isAuthenticated: telegramAuth, isNewUser }) => (
        <PageContent telegramAuth={telegramAuth} isNewUser={isNewUser} />
      )}
    </TelegramInitializer>
  );
}

function PageContent({ telegramAuth, isNewUser }) {
  const [showSurvey, setShowSurvey] = useState(isNewUser);
  const [isAuthenticated, setIsAuthenticated] = useState(telegramAuth);
  const [surveyStep, setSurveyStep] = useState(0);
  const [surveyAnswers, setSurveyAnswers] = useState([]);
  const router = useRouter();

  useEffect(() => {
    setIsAuthenticated(telegramAuth);
    setShowSurvey(isNewUser);
  }, [telegramAuth, isNewUser]);

  const surveyQuestions = [
    {
      question: "üïí –ö–∞–∫–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã —Ç—Ä–∞—Ç–∏—Ç–µ –Ω–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–∫—É –∫ —ç–∫–∑–∞–º–µ–Ω–∞–º –∏–ª–∏ –∏–∑—É—á–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ç–µ–º?",
      options: ["–ú–µ–Ω—å—à–µ 30 –º–∏–Ω—É—Ç ‚è≥", "30-60 –º–∏–Ω—É—Ç ‚è∞", "1-2 —á–∞—Å–∞ ‚åõ", "–ë–æ–ª—å—à–µ 2 —á–∞—Å–æ–≤ üï∞Ô∏è"],
      key: "studyTime"
    },
    {
      question: "üìö –°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ —É—Ö–æ–¥–∏—Ç –Ω–∞ –ø–æ–∏—Å–∫ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –∏ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Å–ø–µ–∫—Ç–æ–≤?",
      options: ["–ú–µ–Ω–µ–µ 10 –º–∏–Ω—É—Ç ‚è≥", "10-30 –º–∏–Ω—É—Ç ‚è∞", "30-60 –º–∏–Ω—É—Ç ‚åõ", "–ë–æ–ª–µ–µ —á–∞—Å–∞ üï∞Ô∏è"],
      key: "materialPreparationTime"
    },
    {
      question: "‚ùì –ö–∞–∫ —á–∞—Å—Ç–æ –≤—ã —Å—Ç–∞–ª–∫–∏–≤–∞–µ—Ç–µ—Å—å —Å –Ω–µ—Ö–≤–∞—Ç–∫–æ–π –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —É—á–µ–±–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤?",
      options: ["–ü–æ—Å—Ç–æ—è–Ω–Ω–æ üîÑ", "–ß–∞—Å—Ç–æ üåÄ", "–ò–Ω–æ–≥–¥–∞ üîÑ", "–†–µ–¥–∫–æ üåÄ"],
      key: "materialAvailability"
    },
    {
      question: "üìÖ –ù–∞—Å–∫–æ–ª—å–∫–æ —Å–ª–æ–∂–Ω–æ –≤–∞–º –¥–∞–µ—Ç—Å—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è —É—á–µ–±–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –∏ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø–ª–∞–Ω–∞ –∑–∞–Ω—è—Ç–∏–π?",
      options: ["–û—á–µ–Ω—å —Å–ª–æ–∂–Ω–æ üòñ", "–°–ª–æ–∂–Ω–æ üòï", "–£–º–µ—Ä–µ–Ω–Ω–æ üôÇ", "–õ–µ–≥–∫–æ üòé"],
      key: "studyOrganization"
    },
    {
      question: "üí° –ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ, —á—Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ —Å–æ–∫—Ä–∞—Ç–∏—Ç—å –≤—Ä–µ–º—è –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ –Ω–∞ 60% –∏ –ø–æ–ª—É—á–∞—Ç—å –∫–æ–Ω—Å–ø–µ–∫—Ç—ã –ø–æ –≤–∞—à–∏–º –∏–Ω—Ç–µ—Ä–µ—Å–∞–º. –í—ã –±—ã –ø–æ–ø—Ä–æ–±–æ–≤–∞–ª–∏ –Ω–∞—à –ø—Ä–æ–¥—É–∫—Ç?",
      options: ["–î–∞, –∫–æ–Ω–µ—á–Ω–æ! üéâ", "–°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ", "–í–æ–∑–º–æ–∂–Ω–æ", "–í—Ä—è–¥ –ª–∏"],
      key: "readyToTry"
    },
    {
      question: "–ö–∞–∫–∏–µ —Ç–µ–º—ã –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç? –í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.",
      options: [
        { 
          name: "–ê–Ω–∏–º–µ", 
          image: "https://lh5.googleusercontent.com/proxy/LI573Ig7yCMVPu3P2-tYguPx4L2d6QegaTBxaA0LWZAndf0BRS46pIKjuGPG5oEbDuFWBVgbF-kMhFcfxeyuQ69UlAFifTcQ9qo",
          subCategories: [
            { name: "–ê—Ç–∞–∫–∞ —Ç–∏—Ç–∞–Ω–æ–≤", image: "https://www.kino-teatr.ru/news/23181/205114.jpg" },
            { name: "–ù–∞—Ä—É—Ç–æ", image: "https://desu.shikimori.one/uploads/poster/animes/20/main_2x-f6c8bb835fb175b99d38d2897e7040ee.webp" },
            { name: "–í–∞–Ω–ü–∏—Å", image: "https://kinocensor.ru/cache/videos/12947/5c88599ed19994fd3ced481339c2259b-367x550.jpg" },
            { name: "–°—Ç–∞–ª—å–Ω–æ–π –∞–ª—Ö–∏–º–∏–∫", image: "https://lh6.googleusercontent.com/proxy/BjJUKL2Akn8ooj2vnmLqM-2NBochvuS3C5ktCbXPjPRE-Y-EPs2mHArja6Ey9JRZxlMZ-kt9d_f3-t4_XtuVIWhiKx58cHL9" },
            { name: "–¢–µ—Ç—Ä–∞–¥—å —Å–º–µ—Ä—Ç–∏", image: "https://media.myshows.me/shows/760/a/96/a96160e13c22678bac4bd99c37842c1b.jpg" },
          ]
        },
        { 
          name: "–ò–≥—Ä—ã", 
          image: "https://resizer.mail.ru/p/a8c5015f-6426-5fe9-abb9-f1f2b917e150/AQAKV4K_BwP8yAXbjpqL4Pmxma1tBlY3Cf79TrwdQS8kv43qQeEQ3DpmZNOFWH4cSuUYYO1UjnHIGO2_3SnTj8zv3Go.jpg",
          subCategories: [
            { name: "The Witcher 3", image: "https://technicalcity.b-cdn.net/en/game_image/4/image?thumbnail=yes&maxwidth=400&maxheight=400&webp=1" },
            { name: "Counter-Strike: Global Offensive", image: "https://img.championat.com/news/big/t/x/anons-counter-strike-2_16795113311562411600.jpg" },
            { name: "Brawl Stars", image: "https://www.iphones.ru/wp-content/uploads/2022/03/2D4F4F53-D36C-4213-BB42-CAC30A9DD06D.jpeg" },
            { name: "Roblox", image: "https://images.immediate.co.uk/production/volatile/sites/3/2021/03/unnamed-881a107.jpg?quality=90&resize=640,427" },
            { name: "Assassin's creed", image: "https://img.asmedia.epimg.net/resizer/v2/NQSSVO3KOFCYRJY63WIWRFWFBU.jpg?auth=2a89197070a4e57d1cd23a611d76bf469e01b476aba89f7724d540f49cfca68b&width=1472&height=1104&smart=true" },
          ]
        },
        { 
          name: "–ú—É–∑—ã–∫–∞", 
          image: "https://34mag.net/piarshak/content/editor_images/2018content/september/15sovetov_koncert/125.jpg",
          subCategories: [
            { name: "Queen", image: "https://i.scdn.co/image/af2b8e57f6d7b5d43a616bd1e27ba552cd8bfd42" },
            { name: "Taylor Swift", image: "https://people.com/thmb/pXCJVY3QPmmcywd3f_pI3vl-9LI=/1500x0/filters:no_upscale():max_bytes(150000):strip_icc():focal(945x393:947x395)/Taylor-Swift-Zurich-070924-1-a49aaa8211c64d5b99d1247b8ea060e2.jpg" },
            { name: "Kendrick Lamar", image: "https://yt3.googleusercontent.com/V4FqOieQ9y9dnErXPUZNWl1hyLafxIK7F55n5M8LVhPBmEou8kAbNuMlUZx23DoJHvH1sWG56No=s900-c-k-c0x00ffffff-no-rj" },
            { name: "Daft Punk", image: "https://concord.com/wp-content/uploads/2018/02/daft-punk-banner-new.jpg" },
            { name: "Eminem", image: "https://i.guim.co.uk/img/media/9340fecc0db09bc13b483168446ad0e2e05c3e23/852_3364_7108_4264/master/7108.jpg?width=465&dpr=1&s=none" },
          ]
        },
        { 
          name: "–°–ø–æ—Ä—Ç", 
          image: "https://img.olympics.com/images/image/private/t_s_pog_staticContent_hero_xl_2x/f_auto/primary/ngdjbafv3twathukjbq2",
          subCategories: [
            { name: "–§—É—Ç–±–æ–ª", image: "https://cdn.britannica.com/69/228369-050-0B18A1F6/Asian-Cup-Final-2019-Hasan-Al-Haydos-Qatar-Japan-Takumi-Minamino.jpg" },
            { name: "–ë–∞—Å–∫–µ—Ç–±–æ–ª", image: "https://sportyakutia.ru/images/1fotoposel/1posel2022/okt22/pari1.jpg" },
            { name: "–í–æ–ª–µ–π–±–æ–ª", image: "https://img.olympics.com/images/image/private/t_s_pog_staticContent_hero_lg/f_auto/primary/ts0pb12hj1xleueuhh22" },
            { name: "–¢–µ–Ω–Ω–∏—Å", image: "https://srednyadm.ru/media/resized/tCZ-RTXNq5cZ28qJuQytkN63rwqKPD77kkvelBVzUUI/rs:fit:1024:768/aHR0cHM6Ly9zcmVk/bnlhZG0ucnUvbWVk/aWEvcHJvamVjdF9t/b18zOTEvOWEvMWIv/ZTcvN2MvNTMvNWYv/aW1hZ2UwMDEuanBn.jpg" },
            { name: "–®–∞—Ö–º–∞—Ç—ã", image: "https://chessbuy.ru/wa-data/public/shop/products/36/06/636/images/4639/4639.970.jpg" },
          ]
        },
        { 
          name: "–ö–æ–º–∏–∫—Å—ã", 
          image: "https://images.ast.ru/upload/iblock/b95/Comics_W.jpg",
          subCategories: [
            { name: "–ß–µ–ª–æ–≤–µ–∫-–ø–∞—É–∫", image: "https://www.mirf.ru/wp-content/uploads/2016/08/Spider-2-scaled.jpg" },
            { name: "–ë—ç—Ç–º–µ–Ω", image: "https://www.mirf.ru/wp-content/uploads/2016/07/batman-reading-comics1.jpg" },
            { name: "–ñ–µ–ª–µ–∑–Ω—ã–π-—á–µ–ª–æ–≤–µ–∫", image: "https://cdn.shazoo.ru/240398_uFCjOXNfWk_iron_man.jpg" },
            { name: "–ê—Å—Ç–µ—Ä–∏–∫—Å –∏ –û–±–µ–ª–∏–∫—Å", image: "https://geekach.com.ua/content/uploads/images/85.jpg" },
            { name: "–î—ç–¥–ø—É–ª", image: "https://disima.ru/wp-content/uploads/2021/02/dedpul-1.jpg" },
          ]
        },
        { 
          name: "–ú—É–ª—å—Ç—Ñ–∏–ª—å–º—ã", 
          image: "https://avatars.dzeninfra.ru/get-zen_doc/1714257/pub_64d7eda2c92c747c9237d8a5_64dbc775a9216a3544a6eeaa/scale_1200",
          subCategories: [
            { name: "–ì–æ–ª–æ–≤–æ–ª–æ–º–∫–∞", image: "https://www.soyuz.ru/public/uploads/files/2/7635896/202406241224521c7d19b9b3.jpg" },
            { name: "–í—Ä–µ–º—è –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π", image: "https://tlum.ru/uploads/bbca0a8e64d9e7d9da2264370f2a92707795984dc3972407152e6d0ef9ab3b14.jpeg" },
            { name: "–ì—Ä–∞–≤–∏—Ç–∏ –§–æ–ª–∑", image: "https://www.soyuz.ru/public/uploads/files/2/7635448/202406061514129c1e31909d.jpg" },
            { name: "–ì—Ä–∏—Ñ—Ñ–∏–Ω—ã", image: "https://thumbs.dfs.ivi.ru/storage5/contents/0/2/97e9a9e47f73cd84040f4b1456ddae.jpg" },
            { name: "–†–∏–∫ –∏ –ú–æ—Ä—Ç–∏", image: "https://s0.rbk.ru/v6_top_pics/media/img/1/64/756744922016641.jpg" },
          ]
        }
      ],
      key: "interests",
      multiple: true
    },
    {
      question: "–ö–∞–∫ —á–∞—Å—Ç–æ –≤—ã –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –∑–∞–Ω–∏–º–∞—Ç—å—Å—è?",
      options: ["–ï–∂–µ–¥–Ω–µ–≤–Ω–æ", "–ù–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é", "–†–∞–∑ –≤ –Ω–µ–¥–µ–ª—é", "–ù–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –≤ –º–µ—Å—è—Ü"],
      key: "studyFrequency"
    }
  ];

  const handleSurveyNext = () => {
    if (surveyStep < surveyQuestions.length - 1) {
      setSurveyStep(surveyStep + 1);
    } else {
      handleSurveyComplete();
    }
  };

  const handleSurveyComplete = async () => {
    try {
      const telegram = window.Telegram?.WebApp;
      const { id, username, first_name, last_name } = telegram.initDataUnsafe.user;

      const response = await axiosInstance.post('/auth/register', {
        telegramId: id,
        username,
        firstName: first_name,
        lastName: last_name,
        surveyAnswers,
      });

      if (response.ok) {
        setIsAuthenticated(true);
        setShowSurvey(false);
      } else {
        throw new Error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è");
      }
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞:", err.message);
      alert(err.message);
      // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–∫–∏
    }
  };

  const renderSurvey = () => {
    const currentQuestion = surveyQuestions[surveyStep];
    return (
      <motion.section
        key={surveyStep}
        initial={{ opacity: 0, x: 50 }}
        animate={{ opacity: 1, x: 0 }}
        exit={{ opacity: 0, x: -50 }}
        transition={{ duration: 0.5 }}
        className="bg-[#171819] rounded-2xl p-4 sm:p-6 md:p-8 lg:p-12 xl:p-16 w-full max-w-4xl xl:max-w-6xl mx-auto text-center shadow-2xl shadow-[#2A1E4D] mb-10"
      >
        <h2 className="text-xl sm:text-2xl md:text-3xl xl:text-4xl font-bold text-white mb-4 sm:mb-6">
          {currentQuestion.question}
        </h2>
        <div className="grid grid-cols-1 sm:grid-cols-2 gap-3 sm:gap-4">
          {currentQuestion.options.map((option, index) => (
            <motion.button
              key={index}
              whileHover={{ scale: 1.03 }}
              whileTap={{ scale: 0.97 }}
              onClick={() => {
                const answer = option.name || option;
                if (currentQuestion.multiple) {
                  setSurveyAnswers((prev) =>
                    prev.includes(answer)
                      ? prev.filter((a) => a !== answer)
                      : [...prev, answer]
                  );
                } else {
                  setSurveyAnswers((prev) => [...prev, answer]);
                  handleSurveyNext();
                }
              }}
              className={`p-6 sm:p-4 rounded-lg text-left transition-all duration-200 ${
                currentQuestion.multiple && surveyAnswers.includes(option.name || option)
                  ? 'bg-[#6a4ae2] text-white'
                  : 'bg-[#2A2D2E] text-white hover:bg-[#3A3D3E]'
              }`}
            >
              {option.name ? (
                <div className="flex flex-col items-center">
                  <img
                    src={option.image}
                    alt={option.name}
                    className="w-full h-24 sm:h-32 xl:h-40 object-cover rounded-lg mb-2"
                  />
                  <span className="text-center text-sm sm:text-lg xl:text-lg font-bold">
                    {option.name}
                  </span>
                </div>
              ) : (
                <span className="text-center w-full block text-lg font-semibold sm:text-base xl:text-lg">
                  {option}
                </span>
              )}
            </motion.button>
          ))}
        </div>
        {currentQuestion.multiple &&
          surveyAnswers.some((answer) => currentQuestion.options.map((o) => o.name).includes(answer)) &&
          currentQuestion.options[0].subCategories && (
            <div className="mt-4 sm:mt-6 xl:mt-8">
              <h3 className="text-lg sm:text-xl md:text-2xl xl:text-3xl font-bold text-white mb-3 sm:mb-4 xl:mb-5">
                –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏:
              </h3>
              <div className="grid grid-cols-1 sm:grid-cols-2 gap-3 sm:gap-4">
                {currentQuestion.options
                  .filter((option) => surveyAnswers.includes(option.name))
                  .flatMap((option) => option.subCategories)
                  .map((subCategory, index) => (
                    <motion.button
                      key={index}
                      whileHover={{ scale: 1.03 }}
                      whileTap={{ scale: 0.97 }}
                      onClick={() => {
                        setSurveyAnswers((prev) =>
                          prev.includes(subCategory.name)
                            ? prev.filter((a) => a !== subCategory.name)
                            : [...prev, subCategory.name]
                        );
                      }}
                      className={`p-3 sm:p-4 rounded-lg text-left transition-all duration-200 ${
                        surveyAnswers.includes(subCategory.name)
                          ? 'bg-[#6a4ae2] text-white'
                          : 'bg-[#2A2D2E] text-white hover:bg-[#3A3D3E]'
                      }`}
                    >
                      <div className="flex flex-col items-center">
                        <img
                          src={subCategory.image}
                          alt={subCategory.name}
                          className="w-full h-24 sm:h-32 xl:h-40 object-cover rounded-lg mb-2"
                        />
                        <span className="text-center text-sm sm:text-base xl:text-lg">
                          {subCategory.name}
                        </span>
                      </div>
                    </motion.button>
                  ))}
              </div>
            </div>
          )}
        {currentQuestion.multiple && (
          <motion.button
            whileHover={{ scale: 1.05 }}
            whileTap={{ scale: 0.95 }}
            onClick={handleSurveyNext}
            className="mt-4 sm:mt-6 xl:mt-8 bg-[#6a4ae2] text-white py-2 px-4 rounded-lg transition-all duration-200 font-bold text-sm sm:text-base xl:text-lg"
          >
            –î–∞–ª–µ–µ
          </motion.button>
        )}
      </motion.section>
    );
  };

  if (showSurvey) {
    return renderSurvey();
  }

  if (!isAuthenticated) {
    return (
      <div style={{ textAlign: 'center', marginTop: '20px', color: 'white' }}>
        –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å –≤ Telegram.
      </div>
    );
  }

  // –ó–¥–µ—Å—å —Ä–∞–∑–º–µ—â–∞–µ—Ç—Å—è –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  return (
    <div>
      <h1>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ!</h1>
      {/* –î–æ–±–∞–≤—å—Ç–µ –∑–¥–µ—Å—å –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç –≤–∞—à–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è */}
    </div>
  );
}
